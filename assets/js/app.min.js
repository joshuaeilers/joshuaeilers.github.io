!function(){"use strict";function e(){return{templateUrl:"app/app.html",controller:t,controllerAs:"vm"}}function t(e,t){function o(){t.load("me").then(function(e){n.profile=e})}var n=this;n.links=[{label:"About",loc:"/"},{label:"Resume",loc:"/resume"},{label:"Blog",loc:"/blog"}],o(),n.isSelected=function(t){return e.path()==t.loc},n.navigateTo=function(t){e.path(t.loc)}}t.$inject=["$location","ProfileService"],angular.module("app").directive("app",e)}(),function(){"use strict";function e(e){e.when("/",{templateUrl:"app/about/about.html"}).when("/resume",{controller:"ResumeController",controllerAs:"vm",templateUrl:"app/resume/resume.html"}).when("/blog",{controller:"BlogController",controllerAs:"vm",templateUrl:"app/blog/blog.html"}).otherwise({redirectTo:"/"})}e.$inject=["$routeProvider"],angular.module("app").config(e)}(),function(){"use strict";function e(){var e=this;e.title="Blog"}angular.module("app").controller("BlogController",e)}(),function(){"use strict";function e(e){this.load=function(t){return e.get("/app/data/profiles/"+t+".json").then(function(e){return e.data})}}e.$inject=["$http"],angular.module("app").service("ProfileService",e)}(),function(){"use strict";function e(){var e=this;e.sections=[{title:"Software Engineer, UC Davis",body:"Developing software in the office of Graduate Studies.\nAlso worked on the Student Information System and in the Registar."},{title:"Software Engineer, UC Davis",body:"Developing software in the office of Graduate Studies.\nAlso worked on the Student Information System and in the Registar."},{title:"Software Engineer, UC Davis",body:"Developing software in the office of Graduate Studies.\nAlso worked on the Student Information System and in the Registar."}]}angular.module("app").controller("ResumeController",e)}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5taW4uanMiLCJhcHAuZGlyZWN0aXZlLmpzIiwiYXBwLnJvdXRlLmpzIiwiYmxvZy9ibG9nLmNvbnRyb2xsZXIuanMiLCJwcm9maWxlL3Byb2ZpbGUuc2VydmljZS5qcyIsInJlc3VtZS9SZXN1bWVDb250cm9sbGVyLmpzIl0sIm5hbWVzIjpbIkFwcCIsInRlbXBsYXRlVXJsIiwiY29udHJvbGxlciIsIkFwcENvbnRyb2xsZXIiLCJjb250cm9sbGVyQXMiLCIkbG9jYXRpb24iLCJQcm9maWxlU2VydmljZSIsImluaXQiLCJsb2FkIiwidGhlbiIsInByb2ZpbGUiLCJ2bSIsInRoaXMiLCJsaW5rcyIsImxhYmVsIiwibG9jIiwiaXNTZWxlY3RlZCIsImxpbmsiLCJwYXRoIiwibmF2aWdhdGVUbyIsIiRpbmplY3QiLCJhbmd1bGFyIiwibW9kdWxlIiwiZGlyZWN0aXZlIiwiUm91dGVDb25maWciLCIkcm91dGVQcm92aWRlciIsIndoZW4iLCJvdGhlcndpc2UiLCJyZWRpcmVjdFRvIiwiY29uZmlnIiwiQmxvZ0NvbnRyb2xsZXIiLCJ0aXRsZSIsIiRodHRwIiwicHJvZmlsZU5hbWUiLCJnZXQiLCJyZXNwb25zZSIsImRhdGEiLCJzZXJ2aWNlIiwiUmVzdW1lQ29udHJvbGxlciIsInNlY3Rpb25zIiwiYm9keSJdLCJtYXBwaW5ncyI6IkNBQUEsV0FBWSxZQ0VaLFNBQVNBLEtBQ1AsT0FDRUMsWUFBYSxlQUNiQyxXQUFZQyxFQUNaQyxhQUFjLE1BSWxCLFFBQVNELEdBQWNFLEVBQVdDLEdBVWhDLFFBQVNDLEtBQ1BELEVBQWVFLEtBQUssTUFBTUMsS0FBSyxTQUFTQyxHQUN0Q0MsRUFBR0QsUUFBVUEsSUFYakIsR0FBSUMsR0FBS0MsSUFDVEQsR0FBR0UsUUFDQ0MsTUFBTyxRQUFTQyxJQUFLLE1BQ3JCRCxNQUFPLFNBQVVDLElBQUssWUFDdEJELE1BQU8sT0FBUUMsSUFBSyxVQUd4QlIsSUFRQUksRUFBR0ssV0FBYSxTQUFTQyxHQUN2QixNQUFPWixHQUFVYSxRQUFVRCxFQUFLRixLQUdsQ0osRUFBR1EsV0FBYSxTQUFTRixHQUN2QlosRUFBVWEsS0FBS0QsRUFBS0YsTUQ5QnhCWixFQUFjaUIsU0FBVyxZQUFhLGtCQ0R0Q0MsUUFBUUMsT0FBTyxPQUFPQyxVQUFVLE1BQU92QixNRG9DdkMsV0FBWSxZRWxDWixTQUFTd0IsR0FBWUMsR0FDbkJBLEVBQ0dDLEtBQUssS0FDSnpCLFlBQWEseUJBRWR5QixLQUFLLFdBQ0p4QixXQUFZLG1CQUNaRSxhQUFjLEtBQ2RILFlBQWEsMkJBRWR5QixLQUFLLFNBQ0p4QixXQUFZLGlCQUNaRSxhQUFjLEtBQ2RILFlBQWEsdUJBRWQwQixXQUFZQyxXQUFZLE1Gb0I3QkosRUFBWUosU0FBVyxrQkVyQ3ZCQyxRQUFRQyxPQUFPLE9BQU9PLE9BQU9MLE1DQTdCLFdBQVEsWUFFUixTQUFTTSxLQUNQLEdBQUluQixHQUFLQyxJQUNURCxHQUFHb0IsTUFBUSxPQUpTVixRQUFXQyxPQUFBLE9BQUFwQixXQUFrQixpQkFBQTRCLE1IZ0VuRCxXQUFZLFlJOURaLFNBQVN4QixHQUFlMEIsR0FDdEJwQixLQUFLSixLQUFPLFNBQVN5QixHQUNuQixNQUFPRCxHQUFNRSxJQUFJLHNCQUF3QkQsRUFBYyxTQUNwRHhCLEtBQUssU0FBUzBCLEdBQ2IsTUFBT0EsR0FBU0MsUUoyRHhCOUIsRUFBZWMsU0FBVyxTSWpFMUJDLFFBQVFDLE9BQU8sT0FBT2UsUUFBUSxpQkFBa0IvQixNQ0FoRCxXQUFRLFlBRVIsU0FBU2dDLEtBQ1AsR0FBSTNCLEdBQUtDLElBQ1RELEdBQUc0QixXQUVDUixNQUFPLDhCQUNQUyxLQUFNLCtIQUdOVCxNQUFPLDhCQUNQUyxLQUFNLCtIQUdOVCxNQUFPLDhCQUNQUyxLQUFNLCtIQWZVbkIsUUFBV0MsT0FBQSxPQUFBcEIsV0FBb0IsbUJBQUFvQyIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7XG5BcHBDb250cm9sbGVyLiRpbmplY3QgPSBbXCIkbG9jYXRpb25cIiwgXCJQcm9maWxlU2VydmljZVwiXTthbmd1bGFyLm1vZHVsZSgnYXBwJykuZGlyZWN0aXZlKCdhcHAnLCBBcHApO1xuXG5mdW5jdGlvbiBBcHAoKSB7XG4gIHJldHVybiB7XG4gICAgdGVtcGxhdGVVcmw6ICdhcHAvYXBwLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6IEFwcENvbnRyb2xsZXIsXG4gICAgY29udHJvbGxlckFzOiAndm0nXG4gIH07XG59XG5cbmZ1bmN0aW9uIEFwcENvbnRyb2xsZXIoJGxvY2F0aW9uLCBQcm9maWxlU2VydmljZSkge1xuICB2YXIgdm0gPSB0aGlzO1xuICB2bS5saW5rcyA9IFtcbiAgICB7IGxhYmVsOiAnQWJvdXQnLCBsb2M6ICcvJyB9LFxuICAgIHsgbGFiZWw6ICdSZXN1bWUnLCBsb2M6ICcvcmVzdW1lJyB9LFxuICAgIHsgbGFiZWw6ICdCbG9nJywgbG9jOiAnL2Jsb2cnIH1cbiAgXTtcblxuICBpbml0KCk7XG5cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBQcm9maWxlU2VydmljZS5sb2FkKCdtZScpLnRoZW4oZnVuY3Rpb24ocHJvZmlsZSkge1xuICAgICAgdm0ucHJvZmlsZSA9IHByb2ZpbGU7XG4gICAgfSk7XG4gIH1cblxuICB2bS5pc1NlbGVjdGVkID0gZnVuY3Rpb24obGluaykge1xuICAgIHJldHVybiAkbG9jYXRpb24ucGF0aCgpID09IGxpbmsubG9jO1xuICB9O1xuXG4gIHZtLm5hdmlnYXRlVG8gPSBmdW5jdGlvbihsaW5rKSB7XG4gICAgJGxvY2F0aW9uLnBhdGgobGluay5sb2MpO1xuICB9O1xufVxufSkoKTtcbihmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO1xuUm91dGVDb25maWcuJGluamVjdCA9IFtcIiRyb3V0ZVByb3ZpZGVyXCJdO2FuZ3VsYXIubW9kdWxlKCdhcHAnKS5jb25maWcoUm91dGVDb25maWcpO1xuXG5mdW5jdGlvbiBSb3V0ZUNvbmZpZygkcm91dGVQcm92aWRlcikge1xuICAkcm91dGVQcm92aWRlclxuICAgIC53aGVuKCcvJywge1xuICAgICAgdGVtcGxhdGVVcmw6ICdhcHAvYWJvdXQvYWJvdXQuaHRtbCdcbiAgICB9KVxuICAgIC53aGVuKCcvcmVzdW1lJywge1xuICAgICAgY29udHJvbGxlcjogJ1Jlc3VtZUNvbnRyb2xsZXInLFxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgdGVtcGxhdGVVcmw6ICdhcHAvcmVzdW1lL3Jlc3VtZS5odG1sJ1xuICAgIH0pXG4gICAgLndoZW4oJy9ibG9nJywge1xuICAgICAgY29udHJvbGxlcjogJ0Jsb2dDb250cm9sbGVyJyxcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnYXBwL2Jsb2cvYmxvZy5odG1sJ1xuICAgIH0pXG4gICAgLm90aGVyd2lzZSh7IHJlZGlyZWN0VG86ICcvJyB9KTtcbn1cbn0pKCk7XG4oZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjthbmd1bGFyLm1vZHVsZSgnYXBwJykuY29udHJvbGxlcignQmxvZ0NvbnRyb2xsZXInLCBCbG9nQ29udHJvbGxlcik7XG5cbmZ1bmN0aW9uIEJsb2dDb250cm9sbGVyKCkge1xuICB2YXIgdm0gPSB0aGlzO1xuICB2bS50aXRsZSA9ICdCbG9nJztcbn1cbn0pKCk7XG4oZnVuY3Rpb24oKXtcInVzZSBzdHJpY3RcIjtcblByb2ZpbGVTZXJ2aWNlLiRpbmplY3QgPSBbXCIkaHR0cFwiXTthbmd1bGFyLm1vZHVsZSgnYXBwJykuc2VydmljZSgnUHJvZmlsZVNlcnZpY2UnLCBQcm9maWxlU2VydmljZSk7XG5cbmZ1bmN0aW9uIFByb2ZpbGVTZXJ2aWNlKCRodHRwKSB7XG4gIHRoaXMubG9hZCA9IGZ1bmN0aW9uKHByb2ZpbGVOYW1lKSB7XG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwcC9kYXRhL3Byb2ZpbGVzLycgKyBwcm9maWxlTmFtZSArICcuanNvbicpXG4gICAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICAgIH0pO1xuICB9O1xufVxufSkoKTtcbihmdW5jdGlvbigpe1widXNlIHN0cmljdFwiO2FuZ3VsYXIubW9kdWxlKCdhcHAnKS5jb250cm9sbGVyKCdSZXN1bWVDb250cm9sbGVyJywgUmVzdW1lQ29udHJvbGxlcik7XG5cbmZ1bmN0aW9uIFJlc3VtZUNvbnRyb2xsZXIoKSB7XG4gIHZhciB2bSA9IHRoaXM7XG4gIHZtLnNlY3Rpb25zID0gW1xuICAgIHtcbiAgICAgIHRpdGxlOiAnU29mdHdhcmUgRW5naW5lZXIsIFVDIERhdmlzJyxcbiAgICAgIGJvZHk6ICdEZXZlbG9waW5nIHNvZnR3YXJlIGluIHRoZSBvZmZpY2Ugb2YgR3JhZHVhdGUgU3R1ZGllcy5cXG5BbHNvIHdvcmtlZCBvbiB0aGUgU3R1ZGVudCBJbmZvcm1hdGlvbiBTeXN0ZW0gYW5kIGluIHRoZSBSZWdpc3Rhci4nXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ1NvZnR3YXJlIEVuZ2luZWVyLCBVQyBEYXZpcycsXG4gICAgICBib2R5OiAnRGV2ZWxvcGluZyBzb2Z0d2FyZSBpbiB0aGUgb2ZmaWNlIG9mIEdyYWR1YXRlIFN0dWRpZXMuXFxuQWxzbyB3b3JrZWQgb24gdGhlIFN0dWRlbnQgSW5mb3JtYXRpb24gU3lzdGVtIGFuZCBpbiB0aGUgUmVnaXN0YXIuJ1xuICAgIH0sXG4gICAge1xuICAgICAgdGl0bGU6ICdTb2Z0d2FyZSBFbmdpbmVlciwgVUMgRGF2aXMnLFxuICAgICAgYm9keTogJ0RldmVsb3Bpbmcgc29mdHdhcmUgaW4gdGhlIG9mZmljZSBvZiBHcmFkdWF0ZSBTdHVkaWVzLlxcbkFsc28gd29ya2VkIG9uIHRoZSBTdHVkZW50IEluZm9ybWF0aW9uIFN5c3RlbSBhbmQgaW4gdGhlIFJlZ2lzdGFyLidcbiAgICB9XG4gIF07XG59fSkoKTsiLCJhbmd1bGFyLm1vZHVsZSgnYXBwJykuZGlyZWN0aXZlKCdhcHAnLCBBcHApO1xuXG5mdW5jdGlvbiBBcHAoKSB7XG4gIHJldHVybiB7XG4gICAgdGVtcGxhdGVVcmw6ICdhcHAvYXBwLmh0bWwnLFxuICAgIGNvbnRyb2xsZXI6IEFwcENvbnRyb2xsZXIsXG4gICAgY29udHJvbGxlckFzOiAndm0nXG4gIH07XG59XG5cbmZ1bmN0aW9uIEFwcENvbnRyb2xsZXIoJGxvY2F0aW9uLCBQcm9maWxlU2VydmljZSkge1xuICB2YXIgdm0gPSB0aGlzO1xuICB2bS5saW5rcyA9IFtcbiAgICB7IGxhYmVsOiAnQWJvdXQnLCBsb2M6ICcvJyB9LFxuICAgIHsgbGFiZWw6ICdSZXN1bWUnLCBsb2M6ICcvcmVzdW1lJyB9LFxuICAgIHsgbGFiZWw6ICdCbG9nJywgbG9jOiAnL2Jsb2cnIH1cbiAgXTtcblxuICBpbml0KCk7XG5cbiAgZnVuY3Rpb24gaW5pdCgpIHtcbiAgICBQcm9maWxlU2VydmljZS5sb2FkKCdtZScpLnRoZW4oZnVuY3Rpb24ocHJvZmlsZSkge1xuICAgICAgdm0ucHJvZmlsZSA9IHByb2ZpbGU7XG4gICAgfSk7XG4gIH1cblxuICB2bS5pc1NlbGVjdGVkID0gZnVuY3Rpb24obGluaykge1xuICAgIHJldHVybiAkbG9jYXRpb24ucGF0aCgpID09IGxpbmsubG9jO1xuICB9O1xuXG4gIHZtLm5hdmlnYXRlVG8gPSBmdW5jdGlvbihsaW5rKSB7XG4gICAgJGxvY2F0aW9uLnBhdGgobGluay5sb2MpO1xuICB9O1xufVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpLmNvbmZpZyhSb3V0ZUNvbmZpZyk7XG5cbmZ1bmN0aW9uIFJvdXRlQ29uZmlnKCRyb3V0ZVByb3ZpZGVyKSB7XG4gICRyb3V0ZVByb3ZpZGVyXG4gICAgLndoZW4oJy8nLCB7XG4gICAgICB0ZW1wbGF0ZVVybDogJ2FwcC9hYm91dC9hYm91dC5odG1sJ1xuICAgIH0pXG4gICAgLndoZW4oJy9yZXN1bWUnLCB7XG4gICAgICBjb250cm9sbGVyOiAnUmVzdW1lQ29udHJvbGxlcicsXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICB0ZW1wbGF0ZVVybDogJ2FwcC9yZXN1bWUvcmVzdW1lLmh0bWwnXG4gICAgfSlcbiAgICAud2hlbignL2Jsb2cnLCB7XG4gICAgICBjb250cm9sbGVyOiAnQmxvZ0NvbnRyb2xsZXInLFxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgdGVtcGxhdGVVcmw6ICdhcHAvYmxvZy9ibG9nLmh0bWwnXG4gICAgfSlcbiAgICAub3RoZXJ3aXNlKHsgcmVkaXJlY3RUbzogJy8nIH0pO1xufVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpLmNvbnRyb2xsZXIoJ0Jsb2dDb250cm9sbGVyJywgQmxvZ0NvbnRyb2xsZXIpO1xuXG5mdW5jdGlvbiBCbG9nQ29udHJvbGxlcigpIHtcbiAgdmFyIHZtID0gdGhpcztcbiAgdm0udGl0bGUgPSAnQmxvZyc7XG59XG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJykuc2VydmljZSgnUHJvZmlsZVNlcnZpY2UnLCBQcm9maWxlU2VydmljZSk7XG5cbmZ1bmN0aW9uIFByb2ZpbGVTZXJ2aWNlKCRodHRwKSB7XG4gIHRoaXMubG9hZCA9IGZ1bmN0aW9uKHByb2ZpbGVOYW1lKSB7XG4gICAgcmV0dXJuICRodHRwLmdldCgnL2FwcC9kYXRhL3Byb2ZpbGVzLycgKyBwcm9maWxlTmFtZSArICcuanNvbicpXG4gICAgICAudGhlbihmdW5jdGlvbihyZXNwb25zZSkge1xuICAgICAgICByZXR1cm4gcmVzcG9uc2UuZGF0YTtcbiAgICAgIH0pO1xuICB9O1xufVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpLmNvbnRyb2xsZXIoJ1Jlc3VtZUNvbnRyb2xsZXInLCBSZXN1bWVDb250cm9sbGVyKTtcblxuZnVuY3Rpb24gUmVzdW1lQ29udHJvbGxlcigpIHtcbiAgdmFyIHZtID0gdGhpcztcbiAgdm0uc2VjdGlvbnMgPSBbXG4gICAge1xuICAgICAgdGl0bGU6ICdTb2Z0d2FyZSBFbmdpbmVlciwgVUMgRGF2aXMnLFxuICAgICAgYm9keTogJ0RldmVsb3Bpbmcgc29mdHdhcmUgaW4gdGhlIG9mZmljZSBvZiBHcmFkdWF0ZSBTdHVkaWVzLlxcbkFsc28gd29ya2VkIG9uIHRoZSBTdHVkZW50IEluZm9ybWF0aW9uIFN5c3RlbSBhbmQgaW4gdGhlIFJlZ2lzdGFyLidcbiAgICB9LFxuICAgIHtcbiAgICAgIHRpdGxlOiAnU29mdHdhcmUgRW5naW5lZXIsIFVDIERhdmlzJyxcbiAgICAgIGJvZHk6ICdEZXZlbG9waW5nIHNvZnR3YXJlIGluIHRoZSBvZmZpY2Ugb2YgR3JhZHVhdGUgU3R1ZGllcy5cXG5BbHNvIHdvcmtlZCBvbiB0aGUgU3R1ZGVudCBJbmZvcm1hdGlvbiBTeXN0ZW0gYW5kIGluIHRoZSBSZWdpc3Rhci4nXG4gICAgfSxcbiAgICB7XG4gICAgICB0aXRsZTogJ1NvZnR3YXJlIEVuZ2luZWVyLCBVQyBEYXZpcycsXG4gICAgICBib2R5OiAnRGV2ZWxvcGluZyBzb2Z0d2FyZSBpbiB0aGUgb2ZmaWNlIG9mIEdyYWR1YXRlIFN0dWRpZXMuXFxuQWxzbyB3b3JrZWQgb24gdGhlIFN0dWRlbnQgSW5mb3JtYXRpb24gU3lzdGVtIGFuZCBpbiB0aGUgUmVnaXN0YXIuJ1xuICAgIH1cbiAgXTtcbn0iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
